'''
1. 큰 문제를 작은 문제로 나눌 수 있다.
2. 작은 문제에서 구한 정답은 그것을 포함하는 큰 문제에서도 동일하다.

메모리제이션은 다이나믹 프로그래밍을 구현하는 방법중 한 종류로, 한 번 구한 결과를 메모리 공간에 메모해두고 같은 식을 다시호출하면 메모한 결과를 그대로 가져오는 기법을 의미한다.
메모리제이션은 값을 저장하는 방법이므로 캐싱이라고도 한다.
'''

#한번 계산된 결과를 메모이제이션 하기 위한 리스트 초기화
d = [0] * 100

#피보나치 함수를 재귀함수로 구현( 탑 다운 다이나믹 프로그래밍 )
def fibo(x):
    if x == 1 or x == 2:
        return 1
    #이미 계산한 적 있는 문제라면 그대로 반환
    if d[x] != 0:
        return d[x]
    #아직 계산하지 않은 문제라면 점화식에 따라서 피보나치 결과 반환
    d[x] = fibo(x-1) + fibo(x-2)
    return d[x]

print(fibo(99))

